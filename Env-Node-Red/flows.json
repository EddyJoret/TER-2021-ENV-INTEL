[{"id":"5f808c7e.6ec774","type":"tab","label":"Simulation Données Poubelle","disabled":false,"info":""},{"id":"12dd0896.e9e9c7","type":"tab","label":"DataStorage","disabled":false,"info":""},{"id":"e0ca6225.6d81f","type":"subflow","name":"Batcher","info":"Store incoming messages' field and emit them together inside at once inside an array.\n\n---\n\nParams:\n - `capacity`:\n - descr: the number of item that can be stored in the queue. If exceeded, all the message will be emitted at once\n - type: `number` (may be set to `Infinity`)\n - example: `10`, `50`, `Infinity`\n - `delay`:\n - descr: the delay in **ms** before the message is sent.\n - type: `number` (may be set to `Infinity`)\n - example: `1000`, `10000`, `Infinity`\n - `field`:\n - descr: name(s) of the field(s) to queue in the queue.\n - type: `string` or `string[]`\n - example:\n - (as string): `payload`, `topic`\n - (as json): `\"payload\"`, `[\"payload\", \"topic\"]`\n\n*NB*: Using both infinite delay and infinite capacity will lead to the batcher never releasing a batch.","category":"","in":[{"x":60,"y":60,"wires":[{"id":"1758fbd7.e07fa4"}]}],"out":[{"x":320,"y":40,"wires":[{"id":"1758fbd7.e07fa4","port":0}]}],"env":[{"name":"capacity","type":"num","value":"10","ui":{"type":"input","opts":{"types":["num","env"]}}},{"name":"delay","type":"num","value":"1000","ui":{"type":"input","opts":{"types":["num","env"]}}},{"name":"field","type":"str","value":"payload","ui":{"type":"input","opts":{"types":["str","json","env"]}}},{"name":"reset","type":"str","value":"reset","ui":{"type":"input","opts":{"types":["str","env"]}}}],"color":"#DDAA99","inputLabels":["message"],"outputLabels":["batch"],"status":{"x":660,"y":80,"wires":[{"id":"3394ee8f.99f4e2","port":0},{"id":"df0c1623.1c8af","port":0}]}},{"id":"ba539b4c.aedcd8","type":"subflow","name":"GraphBatch","info":"SubFlow design to allow high throughput graph without trying to update the webpage every time a new value arive.\n\n---\n\nStandard ui_graph allow 2 use cases:\n - progressive: Add value to an existant graph\n - from dataset: load a set of point\n\nBoth mods are limited:\n - progressive:\n - check if any value of the graph change before sending updating the dashboard. Leading to very bad perf if a graph has more than 20 points.\n - No way to add more than 1 point\n - from dataset:\n - No way to add point once loaded\n - More or less meant to restored previously built graph\n\nThis subflow allow to:\n - add multiple sample at once,\n - batch measure togeher to reduce dashboard latency,\n\nThe interface is meant as transparent: any message previously able to be processed by an ui_graph should be allowed by this sub flow\n\nNB: if singular value are waitinge before getting sent, they may be received after a pack of value is received.\n\n---\n\nto use this subflow, connect both the:\n - graph's output to this subflow input\n - this subflow output to the graph's input\n\n3 kind (+1) are expected:\nFIXME: finish doc","category":"","in":[{"x":60,"y":220,"wires":[{"id":"788081ee.04f878"}]}],"out":[{"x":900,"y":220,"wires":[{"id":"70a535ef.dc180c","port":0}]}],"env":[{"name":"capacity","type":"num","value":"10","ui":{"type":"input","opts":{"types":["num","env"]}}},{"name":"delay","type":"num","value":"1000","ui":{"type":"input","opts":{"types":["num","env"]}}}],"color":"#DDAA99"},{"id":"432a2662.7115f8","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","reset":false},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"c5524c55.9ecb","type":"ui_tab","name":"OpenData","icon":"map","order":3,"disabled":false,"hidden":false},{"id":"ab7c2880.4cc458","type":"ui_group","name":"Points de regroupement des ordures menageres","tab":"c5524c55.9ecb","order":2,"disp":true,"width":"27","collapse":false},{"id":"25a081cf.db982e","type":"mqtt-broker","name":"","broker":"mqtt-brocker","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"b25770c.e80e39","type":"ui_tab","name":"Dashboard","icon":"dashboard","order":2,"disabled":false,"hidden":false},{"id":"c70aabd3.5789f8","type":"ui_group","name":"Capteur humidité","tab":"b25770c.e80e39","order":1,"disp":true,"width":"7","collapse":false},{"id":"15c903b4.b7a98c","type":"ui_group","name":"plan","tab":"b25770c.e80e39","order":2,"disp":true,"width":"20","collapse":false},{"id":"6e8e1379.2d16dc","type":"ui_group","name":"gauge-values","tab":"b25770c.e80e39","order":3,"disp":true,"width":"7","collapse":false},{"id":"5af44c6b.ba6c64","type":"ui_group","name":"Lignes du réseau IDELIS","tab":"c5524c55.9ecb","order":1,"disp":true,"width":"14","collapse":false},{"id":"62f39887.86e848","type":"ui_group","name":"Zones cyclables et stations idecycle","tab":"c5524c55.9ecb","order":2,"disp":true,"width":"27","collapse":false},{"id":"92d80cc3.eea9a","type":"mongodb","hostname":"pcazalis:pcazalis@projettutore.wpu3z.mongodb.net","topology":"dnscluster","connectOptions":"","port":"27017","db":"capteurs","name":""},{"id":"f5ede9ba.616b68","type":"ui_group","name":"Formulaire","tab":"4240e79f.fe9078","order":2,"disp":true,"width":"12","collapse":false},{"id":"f3d6a6f0.26f4a8","type":"ui_group","name":"Auteurs","tab":"4240e79f.fe9078","order":4,"disp":true,"width":"27","collapse":false},{"id":"4240e79f.fe9078","type":"ui_tab","name":"Informations","icon":"infos","order":3,"disabled":false,"hidden":false},{"id":"6c0665cc.3845ec","type":"ui_group","name":"SmartVilla","tab":"4240e79f.fe9078","order":1,"disp":true,"width":"12","collapse":false},{"id":"6d9ec9e6.c2a0d","type":"ui_tab","name":"Tab 4","icon":"dashboard","order":4,"disabled":false,"hidden":true},{"id":"9e4ad82d.ddbc68","type":"ui_group","name":"Group 1","tab":"6d9ec9e6.c2a0d","order":1,"disp":true,"width":"20","collapse":false},{"id":"f0c1eedf.d9f99","type":"serial-port","serialport":"/dev/tty.usbserial-14130","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","waitfor":"","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"\\n","bin":"false","out":"char","addchar":"","responsetimeout":"10000"},{"id":"c492d9ce.9de1b8","type":"serial-port","serialport":"COM3","serialbaud":"115200","databits":"8","parity":"none","stopbits":"1","waitfor":"","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"\\n","bin":"false","out":"char","addchar":"","responsetimeout":"10000"},{"id":"984db78f.0309f8","type":"mqtt-broker","name":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"1758fbd7.e07fa4","type":"function","z":"e0ca6225.6d81f","name":"queue message","func":"// Force reset\nconst reset = context.get('reset');\nif(reset != null && msg.hasOwnProperty(reset)) {\n const handle = context.get('timeout-handle');\n if(handle != null) {\n clearTimeout(handle);\n context.set('timeout-handle');\n }\n context.set('queue', []);\n return buildOutput(false);\n}\n\n\nconst queue = context.get('queue');\nconst field = context.get('field');\n\n// enlève les champs non demandé\nconst filteredMsg = {};\nfor(const [key, value] of Object.entries(msg.payload)) {\n if(field.includes(key)) {\n filteredMsg[key] = value;\n }\n}\n\nqueue.push(filteredMsg);\ncontext.set('queue', queue);\n\n// vérifie qu'on soit pas à la limite de capacité\nconst capacity = context.get('capacity');\nif(queue.length >= capacity) {\n const handle = context.get('timeout-handle');\n\n // capacity > 1 && Number.isFinite(delay)\n if(handle != null) {\n clearTimeout(handle);\n context.set('timeout-handle', null);\n }\n \n return buildOutput(true);\n} else {\n if (queue.length == 1) {\n const delay = context.get('delay');\n if(Number.isFinite(delay)) {\n const handle = setTimeout(() => {\n node.send(buildOutput(true));\n \n // enlève le timeout\n context.set('timeout-handle', null);\n // indique à node-red que la tâche async est fini\n node.done();\n }, delay);\n context.set('timeout-handle', handle);\n }\n }\n return buildOutput(false);\n}\n\n\nfunction buildOutput(sendQueue){\n // récupère les variables nécessaires\n const [queue, field, delay, capacity] = context.get(\n ['queue', 'field', 'delay', 'capacity']\n );\n \n let mainOutput = null;\n if(sendQueue) {\n // remplace la file de message par une nouvelle\n context.set('queue', []);\n // prépare le message contenant la file\n mainOutput = {\n payload: queue,\n field: field,\n delay: delay,\n capacity: capacity,\n };\n }\n \n return [\n mainOutput,\n {\n delay,\n waiting: !sendQueue,\n capacity,\n length: queue.length,\n },\n ];\n}","outputs":2,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n\n// crée une fille d'attente contenant\n// la listes des message en attentes\ncontext.set('queue', []);\n\n// valeur dans lequelle l'id retourner\n// par setTimout sera stocké\ncontext.set('timeout-handle', null);\n\n// récupère le délais maximun d'attente\n// avant que les messages soit stocké\nif(typeof env.get('delay') == 'number') {\n context.set('delay', env.get('delay'));\n} else {\n context.set('delay', 1000);\n}\n\n// défini the capacity of the queue. If reach all messages\n// will be sent at once.\nif(typeof env.get('capacity') == 'number') {\n context.set('capacity', env.get('capacity'));\n} else {\n context.set('capacity', 10);\n}\n\n// récupère les noms des champs a conserver\nconst field = env.get('field');\nif(typeof field == 'string') {\n context.set('field', [field]);\n} else if(\n typeof field == 'object' &&\n Array.isArray(field) &&\n field.every(e => typeof e == 'string')\n) {\n context.set('field', field);\n} else {\n context.set('field', ['payload']);\n}\n\n// défini un champs qui quand reçus forcera la réinitialization du programme\nconst reset = env.get('reset');\nif(typeof reset == 'string' && reset.length > 0 && !context.get('field').includes(reset)) {\n context.set('reset', reset);\n} else {\n context.set('reset', null);\n}","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\n\nconst id = this.context.get('timeout-handle');\nif(id != null) {\n clearTimeout(id);\n}\ncontext.set('timeout-handle', null);\ncontext.set('queue', []);","x":180,"y":60,"wires":[[],["3394ee8f.99f4e2","df0c1623.1c8af"]],"inputLabels":["message"],"outputLabels":["batch","state"]},{"id":"3394ee8f.99f4e2","type":"function","z":"e0ca6225.6d81f","name":"format status","func":"function processMessage(msg) {\n const {delay, length, capacity, waiting} = msg;\n \n if(waiting) {\n // Got a reset\n if(length == 0) {\n return {\n fill: 'grey',\n shape: 'dot',\n text: 'Queue canceled'\n }\n // new queue initiated\n } if(length == 1) {\n return {\n fill: 'blue',\n shape: 'ring',\n text: `new queue started`,\n };\n } else if (capacity < Infinity){\n const color = length/capacity < 0.7 ? 'green' : 'yellow';\n return {\n fill: color,\n shape: 'ring',\n text: `${length}/${capacity} messages stored`,\n };\n } else {\n return {\n fill: 'green',\n shape: 'ring',\n text: `${length} messages stored`\n }\n }\n } else {\n if(length == capacity) {\n return {\n fill: 'red',\n shape: 'dot',\n text: `capacity (${capacity}) reached`,\n };\n } else if (Number.isFinite(delay)) {\n return {\n fill: 'green',\n shape: 'dot',\n text: `${length} messages sent after ${delay/1000}s`,\n };\n } else {\n return {\n fill: 'green',\n shape: 'dot',\n text: `${length} messages sent`,\n }\n }\n }\n}\n\nreturn {payload: processMessage(msg)}","outputs":1,"noerr":0,"initialize":"","finalize":"","x":410,"y":80,"wires":[[]]},{"id":"df0c1623.1c8af","type":"function","z":"e0ca6225.6d81f","name":"Reset status after idling","func":"// reset la dernière tache prévu:\nlet handle = context.get('timeout-handle');\n\n// on a reçu un message\n// => il y a du nouveaux avec la queue\n// => on cancel la dernière tache prévue\nif(handle != null) {\n clearTimeout(handle);\n handle = null;\n}\n\n// le message est le dernier que la queue envoyé\nif(!msg.waiting || msg.length == 0) {\n handle = setTimeout(() => {\n node.send({payload: {}});\n node.done();\n // l'handle sera supprimer au prochain passage\n }, context.get('delay'))\n}\n\ncontext.set('timeout-handle', handle);\nreturn null;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\nconst delay = env.get('delay');\nif(typeof delay == 'number' && Number.isFinite(delay)) {\n context.set('delay', Math.min(Math.max(750, delay), 5000));\n} else {\n context.set('delay', 1000);\n}\n\ncontext.set('timeout-handle', null);","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\n\nconst handle = context.get('timeout-handle');\nif(handle != null) {\n clearTimeout(handle);\n context.set('timeout-handle', null);\n}","x":450,"y":160,"wires":[[]]},{"id":"1b682f34.e19a61","type":"subflow:e0ca6225.6d81f","z":"ba539b4c.aedcd8","name":"","env":[{"name":"capacity","value":"capacity","type":"env"},{"name":"delay","value":"delay","type":"env"},{"name":"field","value":"[\"value\", \"topic\", \"ts\"]","type":"json"}],"x":420,"y":220,"wires":[["70a535ef.dc180c"]]},{"id":"70a535ef.dc180c","type":"function","z":"ba539b4c.aedcd8","name":"process messages","func":"// Teste si l'objet corrspond à une entrée\nfunction isEntry(elt) {\n return typeof elt.ts == 'number'\n && typeof elt.value == 'number'\n && typeof elt.topic == 'string'\n}\n\nfunction initGraphData() {\n return {\n series: [],\n data: [],\n }\n}\n\nconst payload = msg.payload;\n// Le graphe envoie un payload undefined/null\n// si il ne contient pas de mesure\nif(payload == null) {\n context.set('graphData', initGraphData());\n return;\n}\n\n// filtre les messages qui ne sont pas sous forme de tableau\n// les valeurs uniques ont été groupé par Batcher\nif(!Array.isArray(payload)) {\n return;\n}\n\nif(payload.length == 0) {\n context.set('graphData', initGraphData());\n return {payload: []};\n} // a récupéré une list de valeur\nelse if (payload.every(isEntry)) {\n const graphData = msg.override != null ?\n initGraphData() :\n context.get('graphData');\n // insert chaque valeur dans les données du graph\n const toSort = new Set();\n for(const elt of payload) {\n const {ts, value, topic} = elt;\n let i = graphData.series.indexOf(topic);\n if(i == -1) {\n i = graphData.series.length;\n graphData.series.push(topic);\n graphData.data.push([]);\n }\n graphData.data[i].push({x: ts, y: value});\n toSort.add(i);\n }\n for(const i of toSort) {\n graphData.data[i].sort((a, b) => a.x - b.x);\n }\n context.set('graphData', graphData);\n return {payload: [graphData]};\n}\nelse if( // payload est un ensemble de valeur venat du graph\n Array.isArray(payload[0].series) &&\n Array.isArray(payload[0].data) &&\n payload[0].data.every(e => Array.isArray(e))\n){\n context.set('graphData', payload[0]);\n}\n","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\ncontext.set('graphData', {series: [], data: []});","finalize":"","x":770,"y":220,"wires":[[]]},{"id":"3fdc4312.4a6824","type":"change","z":"ba539b4c.aedcd8","name":"Prepare message reset","rules":[{"t":"set","p":"payload","pt":"msg","to":"[]","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":230,"y":260,"wires":[["70a535ef.dc180c"]]},{"id":"788081ee.04f878","type":"switch","z":"ba539b4c.aedcd8","name":"Reset data ?","property":"reset","propertyType":"msg","rules":[{"t":"null"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":190,"y":220,"wires":[["73eeb665.d94608"],["1b682f34.e19a61","3fdc4312.4a6824"]],"outputLabels":["No","Reset !"]},{"id":"73eeb665.d94608","type":"switch","z":"ba539b4c.aedcd8","name":"payload has an array ?","property":"payload","propertyType":"msg","rules":[{"t":"istype","v":"array","vt":"array"},{"t":"istype","v":"object","vt":"object"}],"checkall":"false","repair":false,"outputs":2,"x":460,"y":160,"wires":[["70a535ef.dc180c"],["1b682f34.e19a61"]],"outputLabels":["multiples values to update","one value to accumulate"]},{"id":"1cc028ef.1d7737","type":"comment","z":"ba539b4c.aedcd8","name":"gère le reset du graoh","info":"Et des donées en attente","x":220,"y":300,"wires":[]},{"id":"d236d561.41832","type":"comment","z":"ba539b4c.aedcd8","name":"Valeur unique => batch","info":"","x":460,"y":100,"wires":[]},{"id":"3623eb80.7306a4","type":"debug","z":"12dd0896.e9e9c7","name":"testAptMQTT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":310,"y":180,"wires":[]},{"id":"994e3236.be947","type":"mqtt in","z":"12dd0896.e9e9c7","name":"","topic":"poubelle","qos":"2","datatype":"json","broker":"25a081cf.db982e","x":100,"y":260,"wires":[["3623eb80.7306a4","201a84ff.8584dc"]]},{"id":"1478efdd.44e01","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Verre1","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.3139091308801,\"long\":-0.3745144816347811,\"type\":\"Verre\"}","payloadType":"json","x":150,"y":140,"wires":[["9aabcdc3.0779a"]]},{"id":"9aabcdc3.0779a","type":"function","z":"5f808c7e.6ec774","name":"MajPressionVerre1","func":"let pression = flow.get('verrePression1');\nlet seuil = flow.get('verreSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('verrePression1',pression);\n}\n\nmsg.payload = {\n \"_id\":1,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":450,"y":140,"wires":[["afc65301.e69e3"]]},{"id":"afc65301.e69e3","type":"mqtt out","z":"5f808c7e.6ec774","name":"","topic":"poubelle","qos":"2","retain":"","broker":"25a081cf.db982e","x":860,"y":580,"wires":[]},{"id":"1e0f35d5.5a732a","type":"debug","z":"5f808c7e.6ec774","name":"testAvtMQTT","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":890,"y":700,"wires":[]},{"id":"22f8f7b6.b696a8","type":"inject","z":"5f808c7e.6ec774","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":"2","topic":"","payload":"true","payloadType":"json","x":110,"y":60,"wires":[["e10e733c.27de7"]]},{"id":"e10e733c.27de7","type":"function","z":"5f808c7e.6ec774","name":"InitVar","func":"//Variables seuil, pression, lat et long pour les poubelles type verre\nflow.set('verreSeuil',1000);\nconst verreLat = [43.3139091308801, 43.31441297592778, 43.310851203441516, 43.31198829383463];\nconst verreLong = [-0.3745144816347811, -0.3705300904737857, -0.3657702935847785, -0.3671455772337487];\nflow.set('verreLat',verreLat);\nflow.set('verreLong',verreLong);\nflow.set('verrePression1',0);\nflow.set('verrePression2',0);\nflow.set('verrePression3',0);\nflow.set('verrePression4',0);\n\n//Variables seuil, pression, lat et long pour les poubelles type commun\nflow.set('communSeuil',800);\nconst communLat = [43.31083634182449, 43.322645274024055, 43.31883132515931, 43.314000596748365];\nconst communLong = [-0.36568324360262056, -0.3567479946432236, -0.3396374862646479, -0.3402880848906379];\nflow.set('communLat',communLat);\nflow.set('communLong',communLong);\nflow.set('communPression1',0);\nflow.set('communPression2',0);\nflow.set('communPression3',0);\nflow.set('communPression4',0);\n\n//Variables seuil, pression, lat et long pour les poubelles type recyclage\nflow.set('recyclageSeuil',700);\nconst recyclageLat = [43.310834473981316, 43.32259687120946, 43.318853551238696, 43.31407140746098];\nconst recyclageLong = [-0.36565460107083053, -0.35679448156620447, -0.33974327178516034, -0.3402764522535189];\nflow.set('recyclageLat',recyclageLat);\nflow.set('recyclageLong',recyclageLong);\nflow.set('recyclagePression1',0);\nflow.set('recyclagePression2',0);\nflow.set('recyclagePression3',0);\nflow.set('recyclagePression4',0);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":410,"y":60,"wires":[["481f0b49.ea37c4"]]},{"id":"3bc1756c.88f27a","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Commun1","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.31083634182449,\"long\":-0.36568324360262056,\"type\":\"Commun\"}","payloadType":"json","x":160,"y":460,"wires":[["27201db8.bc8c92"]]},{"id":"27201db8.bc8c92","type":"function","z":"5f808c7e.6ec774","name":"MajPressionCommun1","func":"let pression = flow.get('communPression1');\nlet seuil = flow.get('communSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('communPression1',pression);\n}\n\nmsg.payload = {\n \"_id\":5,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":460,"y":460,"wires":[["afc65301.e69e3"]]},{"id":"46fb30c2.2f571","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Recyclage1","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.310834473981316,\"long\":-0.36565460107083053,\"type\":\"Recyclage\"}","payloadType":"json","x":160,"y":780,"wires":[["757aaea.1972e5"]]},{"id":"757aaea.1972e5","type":"function","z":"5f808c7e.6ec774","name":"MajPressionRecyclage1","func":"let pression = flow.get('recyclagePression1');\nlet seuil = flow.get('recyclageSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('recyclagePression1',pression);\n}\n\nmsg.payload = {\n \"_id\":9,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":470,"y":780,"wires":[["afc65301.e69e3"]]},{"id":"9443e7a7.fea8f8","type":"mongodb out","z":"12dd0896.e9e9c7","mongodb":"92d80cc3.eea9a","name":"Collection Poubelle","collection":"poubelle","payonly":true,"upsert":true,"multi":false,"operation":"store","x":610,"y":260,"wires":[]},{"id":"c988b91c.a98168","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Verre2","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.31441297592778,\"long\":-0.3705300904737857,\"type\":\"Verre\"}","payloadType":"json","x":150,"y":220,"wires":[["d2d6a7c4.f0feb8"]]},{"id":"d2d6a7c4.f0feb8","type":"function","z":"5f808c7e.6ec774","name":"MajPressionVerre2","func":"let pression = flow.get('verrePression2');\nlet seuil = flow.get('verreSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('verrePression2',pression);\n}\n\nmsg.payload = {\n \"_id\":2,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":450,"y":220,"wires":[["afc65301.e69e3"]]},{"id":"be0ecce9.89dd8","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Commun2","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.322645274024055,\"long\":-0.3567479946432236,\"type\":\"Commun\"}","payloadType":"json","x":160,"y":540,"wires":[["bc7d94c.a89bc68"]]},{"id":"bc7d94c.a89bc68","type":"function","z":"5f808c7e.6ec774","name":"MajPressionCommun2","func":"let pression = flow.get('communPression2');\nlet seuil = flow.get('communSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('CommunPression2',pression);\n}\n\nmsg.payload = {\n \"_id\":6,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":460,"y":540,"wires":[["afc65301.e69e3"]]},{"id":"985aa293.20a4e","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Recyclage2","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.32259687120946,\"long\":-0.35679448156620447,\"type\":\"Recyclage\"}","payloadType":"json","x":160,"y":860,"wires":[["584c14f0.e8442c"]]},{"id":"584c14f0.e8442c","type":"function","z":"5f808c7e.6ec774","name":"MajPressionRecyclage2","func":"let pression = flow.get('recyclagePression2');\nlet seuil = flow.get('recyclageSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('recyclagePression2',pression);\n}\n\nmsg.payload = {\n \"_id\":10,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":470,"y":860,"wires":[["afc65301.e69e3"]]},{"id":"a6f59eff.3dcdf","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Verre3","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.310851203441516,\"long\":-0.3657702935847785,\"type\":\"Verre\"}","payloadType":"json","x":150,"y":300,"wires":[["19c11e0a.b1a392"]]},{"id":"19c11e0a.b1a392","type":"function","z":"5f808c7e.6ec774","name":"MajPressionVerre3","func":"let pression = flow.get('verrePression3');\nlet seuil = flow.get('verreSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('verrePression3',pression);\n}\n\nmsg.payload = {\n \"_id\":3,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":450,"y":300,"wires":[["afc65301.e69e3"]]},{"id":"467735f3.415dfc","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Verre4","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.31198829383463,\"long\":-0.3671455772337487,\"type\":\"Verre\"}","payloadType":"json","x":150,"y":380,"wires":[["42f7763b.3fec98"]]},{"id":"42f7763b.3fec98","type":"function","z":"5f808c7e.6ec774","name":"MajPressionVerre4","func":"let pression = flow.get('verrePression4');\nlet seuil = flow.get('verreSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('verrePression4',pression);\n}\n\nmsg.payload = {\n \"_id\":4,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":450,"y":380,"wires":[["afc65301.e69e3"]]},{"id":"be23fae5.b84638","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Commun3","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.31883132515931,\"long\":-0.3396374862646479,\"type\":\"Commun\"}","payloadType":"json","x":160,"y":620,"wires":[["4472688d.19bfe8"]]},{"id":"4472688d.19bfe8","type":"function","z":"5f808c7e.6ec774","name":"MajPressionCommun3","func":"let pression = flow.get('communPression3');\nlet seuil = flow.get('communSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('communPression3',pression);\n}\n\nmsg.payload = {\n \"_id\":7,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":460,"y":620,"wires":[["afc65301.e69e3"]]},{"id":"db421a42.4ca808","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Commun4","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.314000596748365,\"long\":-0.3402880848906379,\"type\":\"Commun\"}","payloadType":"json","x":160,"y":700,"wires":[["82a10a3b.9fcda8"]]},{"id":"82a10a3b.9fcda8","type":"function","z":"5f808c7e.6ec774","name":"MajPressionCommun4","func":"let pression = flow.get('communPression4');\nlet seuil = flow.get('communSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('communPression4',pression);\n}\n\nmsg.payload = {\n \"_id\":8,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":460,"y":700,"wires":[["afc65301.e69e3"]]},{"id":"145d2f07.0cf5d1","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Recyclage3","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.318853551238696,\"long\":-0.33974327178516034,\"type\":\"Recyclage\"}","payloadType":"json","x":160,"y":940,"wires":[["d42d2872.a2dde8"]]},{"id":"d42d2872.a2dde8","type":"function","z":"5f808c7e.6ec774","name":"MajPressionRecyclage3","func":"let pression = flow.get('recyclagePression3');\nlet seuil = flow.get('recyclageSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('recyclagePression3',pression);\n}\n\nmsg.payload = {\n \"_id\":11,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":470,"y":940,"wires":[["afc65301.e69e3"]]},{"id":"935b23ef.f54c3","type":"inject","z":"5f808c7e.6ec774","name":"Lat-Long-Recyclage4","props":[{"p":"payload"}],"repeat":"60","crontab":"","once":true,"onceDelay":"62","topic":"","payload":"{\"lat\":43.31407140746098,\"long\":-0.3402764522535189,\"type\":\"Recyclage\"}","payloadType":"json","x":160,"y":1020,"wires":[["2d151ad5.995086"]]},{"id":"2d151ad5.995086","type":"function","z":"5f808c7e.6ec774","name":"MajPressionRecyclage4","func":"let pression = flow.get('recyclagePression4');\nlet seuil = flow.get('recyclageSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('recyclagePression4',pression);\n}\n\nmsg.payload = {\n \"_id\":12,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":470,"y":1020,"wires":[["afc65301.e69e3"]]},{"id":"c0a2f224.b1ee9","type":"function","z":"5f808c7e.6ec774","name":"Parcours plus envoie de chaque donnée","func":"for(let i = 0; i < msg.payload.length; i++){\n const message = {\"payload\" : msg.payload[i]}; \n node.send(message);\n}\nreturn;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":920,"y":1120,"wires":[["37941a3.bec7fe6"]]},{"id":"37941a3.bec7fe6","type":"switch","z":"5f808c7e.6ec774","name":"","property":"payload._id","propertyType":"msg","rules":[{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"2","vt":"num"},{"t":"eq","v":"3","vt":"num"},{"t":"eq","v":"4","vt":"num"},{"t":"eq","v":"5","vt":"num"},{"t":"eq","v":"6","vt":"num"},{"t":"eq","v":"7","vt":"num"},{"t":"eq","v":"8","vt":"num"},{"t":"eq","v":"9","vt":"num"},{"t":"eq","v":"10","vt":"num"},{"t":"eq","v":"11","vt":"num"},{"t":"eq","v":"12","vt":"num"}],"checkall":"true","repair":false,"outputs":12,"x":1210,"y":1120,"wires":[["f2858bb1.d901a8"],["38a59867.b0ed88"],["844fcad6.388c48"],["d3cbcc28.862d3"],["8ad391ca.9a49d"],["ad394a29.8f5d78"],["354004c6.53138c"],["7535c728.07c338"],["8102c5f3.28c438"],["43a899ad.245968"],["dff5ff3f.2043f"],["343ca13e.c55c3e"]]},{"id":"f2858bb1.d901a8","type":"function","z":"5f808c7e.6ec774","name":"MajVerre1","func":"let pression = flow.get('verrePression1');\nlet seuil = flow.get('verreSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('verrePression1',pression);\n}\n\nmsg.payload = {\n \"_id\":1,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1490,"y":680,"wires":[[]]},{"id":"8ad391ca.9a49d","type":"function","z":"5f808c7e.6ec774","name":"MajCommun1","func":"let pression = flow.get('communPression1');\nlet seuil = flow.get('communSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('communPression1',pression);\n}\n\nmsg.payload = {\n \"_id\":5,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1500,"y":1000,"wires":[[]]},{"id":"8102c5f3.28c438","type":"function","z":"5f808c7e.6ec774","name":"MajRecyclage1","func":"let pression = flow.get('recyclagePression1');\nlet seuil = flow.get('recyclageSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('recyclagePression1',pression);\n}\n\nmsg.payload = {\n \"_id\":9,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1500,"y":1320,"wires":[[]]},{"id":"38a59867.b0ed88","type":"function","z":"5f808c7e.6ec774","name":"MajVerre2","func":"let pression = flow.get('verrePression2');\nlet seuil = flow.get('verreSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('verrePression2',pression);\n}\n\nmsg.payload = {\n \"_id\":2,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":\"Verre\",\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1490,"y":760,"wires":[[]]},{"id":"ad394a29.8f5d78","type":"function","z":"5f808c7e.6ec774","name":"MajCommun2","func":"let pression = flow.get('communPression2');\nlet seuil = flow.get('communSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('CommunPression2',pression);\n}\n\nmsg.payload = {\n \"_id\":6,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1500,"y":1080,"wires":[[]]},{"id":"43a899ad.245968","type":"function","z":"5f808c7e.6ec774","name":"MajRecyclage2","func":"let pression = flow.get('recyclagePression2');\nlet seuil = flow.get('recyclageSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('recyclagePression2',pression);\n}\n\nmsg.payload = {\n \"_id\":10,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1500,"y":1400,"wires":[[]]},{"id":"844fcad6.388c48","type":"function","z":"5f808c7e.6ec774","name":"MajVerre3","func":"let pression = flow.get('verrePression3');\nlet seuil = flow.get('verreSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('verrePression3',pression);\n}\n\nmsg.payload = {\n \"_id\":3,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":\"Verre\",\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1490,"y":840,"wires":[[]]},{"id":"d3cbcc28.862d3","type":"function","z":"5f808c7e.6ec774","name":"MajVerre4","func":"let pression = flow.get('verrePression4');\nlet seuil = flow.get('verreSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('verrePression4',pression);\n}\n\nmsg.payload = {\n \"_id\":4,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":\"Verre\",\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1490,"y":920,"wires":[[]]},{"id":"354004c6.53138c","type":"function","z":"5f808c7e.6ec774","name":"MajCommun3","func":"let pression = flow.get('communPression3');\nlet seuil = flow.get('communSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('communPression3',pression);\n}\n\nmsg.payload = {\n \"_id\":7,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1500,"y":1160,"wires":[[]]},{"id":"7535c728.07c338","type":"function","z":"5f808c7e.6ec774","name":"MajCommun4","func":"let pression = flow.get('communPression4');\nlet seuil = flow.get('communSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('communPression4',pression);\n}\n\nmsg.payload = {\n \"_id\":8,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1500,"y":1240,"wires":[[]]},{"id":"dff5ff3f.2043f","type":"function","z":"5f808c7e.6ec774","name":"MajRecyclage3","func":"let pression = flow.get('recyclagePression3');\nlet seuil = flow.get('recyclageSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('recyclagePression3',pression);\n}\n\nmsg.payload = {\n \"_id\":11,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1500,"y":1480,"wires":[[]]},{"id":"343ca13e.c55c3e","type":"function","z":"5f808c7e.6ec774","name":"MajRecyclage4","func":"let pression = flow.get('recyclagePression4');\nlet seuil = flow.get('recyclageSeuil');\nif(pression < seuil){\n pression = pression + Math.round(Math.random()*(seuil - pression)+50) / 2;\n flow.set('recyclagePression4',pression);\n}\n\nmsg.payload = {\n \"_id\":12,\n \"Lat\":msg.payload.lat,\n \"Long\":msg.payload.long,\n \"Type\":msg.payload.type,\n \"Seuil\":seuil,\n \"Pression\":pression,\n \"Nb_Rempli\":{\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0,\n \"Récupération\":false\n },\n \"Moyenne\":{\n \"Nb_Annee\":0,\n \"Janvier\":0,\n \"Février\":0,\n \"Mars\":0,\n \"Avril\":0,\n \"Mai\":0,\n \"Juin\":0,\n \"Juillet\":0,\n \"Août\":0,\n \"Septembre\":0,\n \"Octobre\":0,\n \"Novembre\":0,\n \"Décembre\":0\n }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\ncontext.set('seuil',1000);\ncontext.set('pression',500);","x":1500,"y":1560,"wires":[[]]},{"id":"6e186884.c49188","type":"mongodb out","z":"5f808c7e.6ec774","mongodb":"92d80cc3.eea9a","name":"Collection Poubelle","collection":"poubelle","payonly":true,"upsert":true,"multi":false,"operation":"store","x":1230,"y":60,"wires":[]},{"id":"481f0b49.ea37c4","type":"function","z":"5f808c7e.6ec774","name":"InitBD","func":"let verreLat = flow.get('verreLat');\nlet verreLong = flow.get('verreLong');\n\nlet communLat = flow.get('communLat');\nlet communLong = flow.get('communLong');\n\nlet recyclageLat = flow.get('recyclageLat');\nlet recyclageLong = flow.get('recyclageLong');\n\nlet hist = {\n    \"Nb_Rempli\":{\n        \"Janvier\":0,\n        \"Février\":0,\n        \"Mars\":0,\n        \"Avril\":0,\n        \"Mai\":0,\n        \"Juin\":0,\n        \"Juillet\":0,\n        \"Août\":0,\n        \"Septembre\":0,\n        \"Octobre\":0,\n        \"Novembre\":0,\n        \"Décembre\":0,\n        \"Récupération\":false\n    },\n    \"Moyenne\":{\n        \"Nb_Annee\":0,\n        \"Janvier\":0,\n        \"Février\":0,\n        \"Mars\":0,\n        \"Avril\":0,\n        \"Mai\":0,\n        \"Juin\":0,\n        \"Juillet\":0,\n        \"Août\":0,\n        \"Septembre\":0,\n        \"Octobre\":0,\n        \"Novembre\":0,\n        \"Décembre\":0\n    }\n};\n\nlet j = 0;\nfor(let i = 1; i <= 12; i++){\n    j = j % 4;\n    if(i < 5){\n        msg.payload = {\n            \"_id\" : i,\n            \"Coord\" : {\n                \"Lat\" : verreLat[j],\n                \"Long\" : verreLong[j]\n            },\n            \"Type\" : \"Verre\",\n            \"Seuil\" : flow.get('verreSeuil'),\n            \"Pression\" : 0,\n            \"Historique\": hist\n        }\n        node.send(msg);\n    }else if(i < 9){\n        msg.payload = {\n            \"_id\" : i,\n            \"Coord\" : {\n                \"Lat\" : communLat[j],\n                \"Long\" : communLong[j]\n            },\n            \"Type\" : \"Commun\",\n            \"Seuil\" : flow.get('communSeuil'),\n            \"Pression\" : 0,\n            \"Historique\": hist\n        }\n        node.send(msg);\n    }else{\n        msg.payload = {\n            \"_id\" : i,\n            \"Coord\" : {\n                \"Lat\" : recyclageLat[j],\n                \"Long\" : recyclageLong[j]\n            },\n            \"Type\" : \"Recyclage\",\n            \"Seuil\" : flow.get('recyclageSeuil'),\n            \"Pression\" : 0,\n            \"Historique\": hist\n        }\n        node.send(msg);\n    }\n    j++;   \n}\nreturn;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":850,"y":60,"wires":[["6e186884.c49188"]]},{"id":"517a2fa3.37748","type":"mongodb in","z":"12dd0896.e9e9c7","mongodb":"92d80cc3.eea9a","name":"Collection Poubelle Find","collection":"poubelle","operation":"find","x":570,"y":60,"wires":[["1c38fee4.4d2771"]]},{"id":"be6cb846.ff4658","type":"function","z":"12dd0896.e9e9c7","name":"Query .find","func":"msg.payload = {}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":310,"y":60,"wires":[["517a2fa3.37748"]]},{"id":"39f949ae.a55a86","type":"inject","z":"12dd0896.e9e9c7","name":"","props":[{"p":"init","v":"true","vt":"bool"}],"repeat":"60","crontab":"","once":true,"onceDelay":"20","topic":"","x":110,"y":60,"wires":[["be6cb846.ff4658"]]},{"id":"c27ce08c.10286","type":"debug","z":"12dd0896.e9e9c7","name":"testAptFind","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1210,"y":60,"wires":[]},{"id":"1c38fee4.4d2771","type":"function","z":"12dd0896.e9e9c7","name":"Stockage Récup données \"Poubelles\"","func":"flow.set('DonneeBD', msg.payload);\nconst message = {\"payload\" : flow.get('DonneeBD')};\nreturn message;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":910,"y":60,"wires":[["c27ce08c.10286"]]},{"id":"201a84ff.8584dc","type":"function","z":"12dd0896.e9e9c7","name":"Maj hist \"Poubelles\"","func":"const donnees = flow.get('DonneeBD');\nlet trouve = false;\nlet i = 0;\nlet hist;\nconst poubelle = msg.payload;\n\nwhile(i < donnees.length && !trouve){\n    if(msg.payload._id == donnees[i]._id){\n        trouve = true;\n        hist = donnees[i].Historique;\n    }else{\n        i++;\n    }\n}\n\nif(poubelle.Pression >= poubelle.Seuil){\n    let month = new Date().getMonth();\n    switch(month){\n        case 0:\n            hist.Nb_Rempli.Janvier++;\n            break;\n        case 1:\n            hist.Nb_Rempli.Février++;\n            break;\n        case 2:\n            hist.Nb_Rempli.Mars++;\n            break;\n        case 3:\n            hist.Nb_Rempli.Avril++;\n            break;\n        case 4:\n            hist.Nb_Rempli.Mai++;\n            break;\n        case 5:\n            hist.Nb_Rempli.Juin++;\n            break;\n        case 6:\n            hist.Nb_Rempli.Juillet++;\n            break;\n        case 7:\n            hist.Nb_Rempli.Août++;\n            break;\n        case 8:\n            hist.Nb_Rempli.Septembre++;\n            break;\n        case 9:\n            hist.Nb_Rempli.Octobre++;\n            break;\n        case 10:\n            hist.Nb_Rempli.Novembre++;\n            break;\n        case 11:\n            hist.Nb_Rempli.Décembre++;\n            break;\n    }\n}\n\nmsg.payload = {\n    \"_id\" : poubelle._id,\n    \"Coord\" : poubelle.Coord,\n    \"Type\" : poubelle.Type,\n    \"Seuil\" : poubelle.Seuil,\n    \"Pression\" : poubelle.Pression,\n    \"Historique\" : hist\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":260,"wires":[["9443e7a7.fea8f8"]]}]